//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputManagement/Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""5489c5d1-4714-4508-858c-cf4669c3fcc3"",
            ""actions"": [
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""61f66354-bf42-48c9-ae89-07c73124895a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""JetPack"",
                    ""type"": ""Button"",
                    ""id"": ""9896a99f-d05a-453a-8d75-e058c9b8d8b7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""77f697f6-cd6a-4406-b0c7-5341ccdb5355"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickupTrap"",
                    ""type"": ""Button"",
                    ""id"": ""2c07340e-8973-4b4f-bd01-81d4e4767d2f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""b185f994-a651-4cba-9c81-8f87c0f157b6"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Crouch"",
                    ""type"": ""Button"",
                    ""id"": ""1db7ca58-6149-4800-b4db-2aebc7e9cb1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""394c0312-9c71-4a49-af29-ec111e354612"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""a4f07704-2d6f-4645-8f3a-2e303cdcf4d9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltFire"",
                    ""type"": ""Button"",
                    ""id"": ""6b09767a-9fed-4e4f-81eb-55700ca66fd6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""EnableTrap"",
                    ""type"": ""Button"",
                    ""id"": ""e51eea2d-f941-40f2-a0ed-310b878a9aea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ReturnToShip"",
                    ""type"": ""Button"",
                    ""id"": ""55a4b40f-bf12-4990-9cb6-666ee1e13cdd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchTool"",
                    ""type"": ""Button"",
                    ""id"": ""f66e18a3-ceeb-4439-a854-dc91452d67e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleTablet_On"",
                    ""type"": ""Button"",
                    ""id"": ""2ca207ca-b0b0-4ca5-a04c-df0478ff3ccd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""978bfe49-cc26-4a3d-ab7b-7d7a29327403"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""00ca640b-d935-4593-8157-c05846ea39b3"",
                    ""path"": ""Dpad"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e2062cb9-1b15-46a2-838c-2f8d72a0bdd9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""8180e8bd-4097-4f4e-ab88-4523101a6ce9"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""320bffee-a40b-4347-ac70-c210eb8bc73a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1c5327b5-f71c-4f60-99c7-4e737386f1d1"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d2581a9b-1d11-4566-b27d-b92aff5fabbc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""2e46982e-44cc-431b-9f0b-c11910bf467a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fcfe95b8-67b9-4526-84b5-5d0bc98d6400"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""77bff152-3580-4b21-b6de-dcd0c7e41164"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c1f7a91b-d0fd-4a62-997e-7fb9b69bf235"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c8e490b-c610-4785-884f-f04217b23ca4"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse;Touch"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""143bb1cd-cc10-4eca-a2f0-a3664166fe91"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Gamepad"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""05f6913d-c316-48b2-a6bb-e225f14c7960"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": "";Keyboard&Mouse"",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8115417b-7adf-4fe9-a121-e46e8dab965f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""AltFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3d2f770-03e4-4fea-9bee-e2b6d2d0966b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""AltFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cccda159-5501-4799-8e12-bd7dbbe4aad8"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6a109394-42fd-4037-b9cb-dca80ec78059"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bdaa1cbd-633e-4eca-8357-b0cf53d0b1fc"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8c5ecf91-ff3c-47c5-a5c8-77ffe0b15b6e"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""76ea8442-616b-416f-80de-8594c25dc6b2"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickupTrap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57a90032-6f28-4d7d-8207-f3b43dfac22c"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PickupTrap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b46f0513-5860-4835-bec0-b3fed4c66e3b"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""201b3ad0-5091-4ac0-965f-bdb3f30d9234"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Crouch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0c43db28-6e36-4bd8-871f-923e8cec3e5a"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnableTrap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ab95548-bf9b-4aea-af6a-c62b887bcc05"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""EnableTrap"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1aa24071-3774-4365-bceb-112fced05690"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReturnToShip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3311698e-5042-444b-9bef-ed13af2a46c5"",
                    ""path"": ""<Keyboard>/t"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ReturnToShip"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0af20c0a-059b-4dfb-9b9f-1144a444d2a9"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchTool"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a7aacedd-4d4a-431d-a5ab-08ca89e99346"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchTool"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7b86ce2f-829e-4655-8411-b1d7aac0563e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""JetPack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9357d9d-cb60-4378-8ff6-3791b44542e4"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""JetPack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cfd5ea93-452c-46b3-9326-3c337c6960b9"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ToggleTablet_On"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eb241264-7d34-4cfa-972d-802af09d1713"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ToggleTablet_On"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""d295925b-a8d5-4cb0-8c48-86536c4e20c7"",
            ""actions"": [
                {
                    ""name"": ""MoveTabLeft"",
                    ""type"": ""Button"",
                    ""id"": ""02bef0c8-e578-4462-8dcd-013303003db0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveTabRight"",
                    ""type"": ""Button"",
                    ""id"": ""001dc354-c9bb-43ad-bede-b6e2f2b7c8b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveTeleportLeft"",
                    ""type"": ""Button"",
                    ""id"": ""4b8b8859-2c4c-4820-98cf-66f5a15800b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveTeleportRight"",
                    ""type"": ""Button"",
                    ""id"": ""6b953aaa-46b5-4cd9-95a7-d20129ea9278"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectTeleport"",
                    ""type"": ""Button"",
                    ""id"": ""4f6b327a-5c51-4450-bd44-9898cb0b26cc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleTablet_Off"",
                    ""type"": ""Button"",
                    ""id"": ""c4e951d9-2607-453a-85e8-c1b33f5bb4d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""369803e0-002b-466c-9572-9e795c86aaa8"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""MoveTabLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f110f559-1cd9-47f7-8e9e-41ffd5276b63"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""MoveTabRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""16cf14cc-e06d-4de3-85c5-47eeccefbd57"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""MoveTeleportLeft"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed2b2208-ccb7-404e-b8a9-34577e1aba53"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""MoveTeleportRight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b9a19df5-4d0c-42e5-b4cf-ecda836c10c3"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""SelectTeleport"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b3bb1a92-e2ee-462f-b767-f2afe9331694"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard&Mouse"",
                    ""action"": ""ToggleTablet_Off"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8965df55-a35a-44fe-a51c-74bedc270d95"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""ToggleTablet_Off"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard&Mouse"",
            ""bindingGroup"": ""Keyboard&Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Touch"",
            ""bindingGroup"": ""Touch"",
            ""devices"": [
                {
                    ""devicePath"": ""<Touchscreen>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Joystick"",
            ""bindingGroup"": ""Joystick"",
            ""devices"": [
                {
                    ""devicePath"": ""<Joystick>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""XR"",
            ""bindingGroup"": ""XR"",
            ""devices"": [
                {
                    ""devicePath"": ""<XRController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_JetPack = m_Player.FindAction("JetPack", throwIfNotFound: true);
        m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
        m_Player_PickupTrap = m_Player.FindAction("PickupTrap", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Crouch = m_Player.FindAction("Crouch", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Fire = m_Player.FindAction("Fire", throwIfNotFound: true);
        m_Player_AltFire = m_Player.FindAction("AltFire", throwIfNotFound: true);
        m_Player_EnableTrap = m_Player.FindAction("EnableTrap", throwIfNotFound: true);
        m_Player_ReturnToShip = m_Player.FindAction("ReturnToShip", throwIfNotFound: true);
        m_Player_SwitchTool = m_Player.FindAction("SwitchTool", throwIfNotFound: true);
        m_Player_ToggleTablet_On = m_Player.FindAction("ToggleTablet_On", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_MoveTabLeft = m_UI.FindAction("MoveTabLeft", throwIfNotFound: true);
        m_UI_MoveTabRight = m_UI.FindAction("MoveTabRight", throwIfNotFound: true);
        m_UI_MoveTeleportLeft = m_UI.FindAction("MoveTeleportLeft", throwIfNotFound: true);
        m_UI_MoveTeleportRight = m_UI.FindAction("MoveTeleportRight", throwIfNotFound: true);
        m_UI_SelectTeleport = m_UI.FindAction("SelectTeleport", throwIfNotFound: true);
        m_UI_ToggleTablet_Off = m_UI.FindAction("ToggleTablet_Off", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_JetPack;
    private readonly InputAction m_Player_Sprint;
    private readonly InputAction m_Player_PickupTrap;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Crouch;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Fire;
    private readonly InputAction m_Player_AltFire;
    private readonly InputAction m_Player_EnableTrap;
    private readonly InputAction m_Player_ReturnToShip;
    private readonly InputAction m_Player_SwitchTool;
    private readonly InputAction m_Player_ToggleTablet_On;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @JetPack => m_Wrapper.m_Player_JetPack;
        public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
        public InputAction @PickupTrap => m_Wrapper.m_Player_PickupTrap;
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Crouch => m_Wrapper.m_Player_Crouch;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Fire => m_Wrapper.m_Player_Fire;
        public InputAction @AltFire => m_Wrapper.m_Player_AltFire;
        public InputAction @EnableTrap => m_Wrapper.m_Player_EnableTrap;
        public InputAction @ReturnToShip => m_Wrapper.m_Player_ReturnToShip;
        public InputAction @SwitchTool => m_Wrapper.m_Player_SwitchTool;
        public InputAction @ToggleTablet_On => m_Wrapper.m_Player_ToggleTablet_On;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @JetPack.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJetPack;
                @JetPack.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJetPack;
                @JetPack.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJetPack;
                @Sprint.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                @PickupTrap.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickupTrap;
                @PickupTrap.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickupTrap;
                @PickupTrap.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickupTrap;
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Crouch.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Crouch.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Crouch.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCrouch;
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Fire.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFire;
                @AltFire.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAltFire;
                @AltFire.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAltFire;
                @AltFire.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnAltFire;
                @EnableTrap.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnableTrap;
                @EnableTrap.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnableTrap;
                @EnableTrap.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnEnableTrap;
                @ReturnToShip.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReturnToShip;
                @ReturnToShip.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReturnToShip;
                @ReturnToShip.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReturnToShip;
                @SwitchTool.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchTool;
                @SwitchTool.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchTool;
                @SwitchTool.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchTool;
                @ToggleTablet_On.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleTablet_On;
                @ToggleTablet_On.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleTablet_On;
                @ToggleTablet_On.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnToggleTablet_On;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @JetPack.started += instance.OnJetPack;
                @JetPack.performed += instance.OnJetPack;
                @JetPack.canceled += instance.OnJetPack;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @PickupTrap.started += instance.OnPickupTrap;
                @PickupTrap.performed += instance.OnPickupTrap;
                @PickupTrap.canceled += instance.OnPickupTrap;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Crouch.started += instance.OnCrouch;
                @Crouch.performed += instance.OnCrouch;
                @Crouch.canceled += instance.OnCrouch;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @AltFire.started += instance.OnAltFire;
                @AltFire.performed += instance.OnAltFire;
                @AltFire.canceled += instance.OnAltFire;
                @EnableTrap.started += instance.OnEnableTrap;
                @EnableTrap.performed += instance.OnEnableTrap;
                @EnableTrap.canceled += instance.OnEnableTrap;
                @ReturnToShip.started += instance.OnReturnToShip;
                @ReturnToShip.performed += instance.OnReturnToShip;
                @ReturnToShip.canceled += instance.OnReturnToShip;
                @SwitchTool.started += instance.OnSwitchTool;
                @SwitchTool.performed += instance.OnSwitchTool;
                @SwitchTool.canceled += instance.OnSwitchTool;
                @ToggleTablet_On.started += instance.OnToggleTablet_On;
                @ToggleTablet_On.performed += instance.OnToggleTablet_On;
                @ToggleTablet_On.canceled += instance.OnToggleTablet_On;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_MoveTabLeft;
    private readonly InputAction m_UI_MoveTabRight;
    private readonly InputAction m_UI_MoveTeleportLeft;
    private readonly InputAction m_UI_MoveTeleportRight;
    private readonly InputAction m_UI_SelectTeleport;
    private readonly InputAction m_UI_ToggleTablet_Off;
    public struct UIActions
    {
        private @PlayerInput m_Wrapper;
        public UIActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveTabLeft => m_Wrapper.m_UI_MoveTabLeft;
        public InputAction @MoveTabRight => m_Wrapper.m_UI_MoveTabRight;
        public InputAction @MoveTeleportLeft => m_Wrapper.m_UI_MoveTeleportLeft;
        public InputAction @MoveTeleportRight => m_Wrapper.m_UI_MoveTeleportRight;
        public InputAction @SelectTeleport => m_Wrapper.m_UI_SelectTeleport;
        public InputAction @ToggleTablet_Off => m_Wrapper.m_UI_ToggleTablet_Off;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @MoveTabLeft.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTabLeft;
                @MoveTabLeft.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTabLeft;
                @MoveTabLeft.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTabLeft;
                @MoveTabRight.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTabRight;
                @MoveTabRight.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTabRight;
                @MoveTabRight.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTabRight;
                @MoveTeleportLeft.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTeleportLeft;
                @MoveTeleportLeft.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTeleportLeft;
                @MoveTeleportLeft.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTeleportLeft;
                @MoveTeleportRight.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTeleportRight;
                @MoveTeleportRight.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTeleportRight;
                @MoveTeleportRight.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMoveTeleportRight;
                @SelectTeleport.started -= m_Wrapper.m_UIActionsCallbackInterface.OnSelectTeleport;
                @SelectTeleport.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnSelectTeleport;
                @SelectTeleport.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnSelectTeleport;
                @ToggleTablet_Off.started -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleTablet_Off;
                @ToggleTablet_Off.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleTablet_Off;
                @ToggleTablet_Off.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnToggleTablet_Off;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveTabLeft.started += instance.OnMoveTabLeft;
                @MoveTabLeft.performed += instance.OnMoveTabLeft;
                @MoveTabLeft.canceled += instance.OnMoveTabLeft;
                @MoveTabRight.started += instance.OnMoveTabRight;
                @MoveTabRight.performed += instance.OnMoveTabRight;
                @MoveTabRight.canceled += instance.OnMoveTabRight;
                @MoveTeleportLeft.started += instance.OnMoveTeleportLeft;
                @MoveTeleportLeft.performed += instance.OnMoveTeleportLeft;
                @MoveTeleportLeft.canceled += instance.OnMoveTeleportLeft;
                @MoveTeleportRight.started += instance.OnMoveTeleportRight;
                @MoveTeleportRight.performed += instance.OnMoveTeleportRight;
                @MoveTeleportRight.canceled += instance.OnMoveTeleportRight;
                @SelectTeleport.started += instance.OnSelectTeleport;
                @SelectTeleport.performed += instance.OnSelectTeleport;
                @SelectTeleport.canceled += instance.OnSelectTeleport;
                @ToggleTablet_Off.started += instance.OnToggleTablet_Off;
                @ToggleTablet_Off.performed += instance.OnToggleTablet_Off;
                @ToggleTablet_Off.canceled += instance.OnToggleTablet_Off;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard&Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_TouchSchemeIndex = -1;
    public InputControlScheme TouchScheme
    {
        get
        {
            if (m_TouchSchemeIndex == -1) m_TouchSchemeIndex = asset.FindControlSchemeIndex("Touch");
            return asset.controlSchemes[m_TouchSchemeIndex];
        }
    }
    private int m_JoystickSchemeIndex = -1;
    public InputControlScheme JoystickScheme
    {
        get
        {
            if (m_JoystickSchemeIndex == -1) m_JoystickSchemeIndex = asset.FindControlSchemeIndex("Joystick");
            return asset.controlSchemes[m_JoystickSchemeIndex];
        }
    }
    private int m_XRSchemeIndex = -1;
    public InputControlScheme XRScheme
    {
        get
        {
            if (m_XRSchemeIndex == -1) m_XRSchemeIndex = asset.FindControlSchemeIndex("XR");
            return asset.controlSchemes[m_XRSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnJump(InputAction.CallbackContext context);
        void OnJetPack(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnPickupTrap(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnCrouch(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnAltFire(InputAction.CallbackContext context);
        void OnEnableTrap(InputAction.CallbackContext context);
        void OnReturnToShip(InputAction.CallbackContext context);
        void OnSwitchTool(InputAction.CallbackContext context);
        void OnToggleTablet_On(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnMoveTabLeft(InputAction.CallbackContext context);
        void OnMoveTabRight(InputAction.CallbackContext context);
        void OnMoveTeleportLeft(InputAction.CallbackContext context);
        void OnMoveTeleportRight(InputAction.CallbackContext context);
        void OnSelectTeleport(InputAction.CallbackContext context);
        void OnToggleTablet_Off(InputAction.CallbackContext context);
    }
}
